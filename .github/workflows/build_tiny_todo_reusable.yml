name: Build and Test TinyTodo
on:
    workflow_call:
      inputs:
        cedar_policy_ref:
          required: false
          type: string
        cedar_examples_ref:
          required: false
          default: "main"
          type: string

jobs:
  build_and_test_tiny_todo:
    name: Build and Test TinyTodo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout Cedar Examples
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar-examples
          ref: ${{ inputs.cedar_examples_ref }}
      - name: Checkout cedar-policy
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar
          ref: ${{ inputs.cedar_policy_ref }}
          path: ./cedar
# If we passed a branch for cedar-policy, modify Cargo.toml to use that branch
      - name: Replace main with Specified Branch
        if: "${{ inputs.cedar_policy_ref != '' }}"
        run: cd tinytodo && head -n -2 Cargo.toml > Temp.toml && mv Temp.toml Cargo.toml && printf 'branch = "${{ inputs.cedar_policy_ref }}"' >> Cargo.toml
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo fmt
        working-directory: ./tinytodo
        run: cargo fmt --all --check
      - name: cargo rustc
        working-directory: ./tinytodo
        run: |
             RUSTFLAGS="-D warnings -F unsafe-code" cargo build --verbose
      - name: cargo test
        working-directory: ./tinytodo
        run: cargo test --verbose
      - name: cargo test templates
        working-directory: ./tinytodo
        run: cargo test --verbose --features=use-templates
      - name: python test
        working-directory: ./tinytodo
        run: |
          cargo build --release
          python3 -m unittest
      - name: python test templates
        working-directory: ./tinytodo
        run: |
          cargo build --release --features=use-templates
          python3 -m unittest
