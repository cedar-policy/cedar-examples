name: Cargo Build & Test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test_rust_hello_world:
    name: rust-hello-world
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout Cedar Examples
        uses: actions/checkout@v3
      - name: Checkout cedar
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar
          ref: main
          path: ./cedar
          ssh-key: ${{ secrets.CEDAR }}
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo fmt
        working-directory: ./cedar-rust-hello-world
        run: cargo fmt --all --check
      - name: cargo rustc
        working-directory: ./cedar-rust-hello-world
        run: |
             printf "\npath = \"../cedar/cedar-policy\"" >> Cargo.toml
             RUSTFLAGS="-D warnings -F unsafe-code" cargo build --verbose
      - name: cargo test
        working-directory: ./cedar-rust-hello-world
        run: cargo test --verbose

  build_and_test_java_hello_world:
    name: java-hello-world
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout Cedar Examples
        uses: actions/checkout@v3
      - name: Checkout cedar-java
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar-java
          ref: main
          path: ./cedar-java
          ssh-key: ${{ secrets.CEDARJAVA }}
      - name: Checkout cedar
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar
          ref: main
          path: ./cedar-java/cedar
          ssh-key: ${{ secrets.CEDAR }}
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo build CedarJavaFFI
        working-directory: ./cedar-java/CedarJavaFFI
        run: cargo build
      - name: Build cedar-java-hello-world
        working-directory: ./cedar-java-hello-world
        run: ./gradlew build

  build_and_test_github_model_app:
    name: github-model-app
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout Cedar Examples
        uses: actions/checkout@v3
      - name: Checkout cedar
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar
          ref: main
          path: ./cedar
          ssh-key: ${{ secrets.CEDAR }}
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo fmt
        working-directory: ./cedar-github-model-app
        run: cargo fmt --all --check
      - name: cargo rustc
        working-directory: ./cedar-github-model-app
        run: |
             printf "\npath = \"../cedar/cedar-policy\"" >> Cargo.toml
             RUSTFLAGS="-F unsafe-code" cargo build --verbose
      - name: cargo test
        working-directory: ./cedar-github-model-app
        run: cargo test --verbose

  build_and_test_tiny_todo:
    name: tiny-todo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout Cedar Examples
        uses: actions/checkout@v3
      - name: Checkout cedar
        uses: actions/checkout@v3
        with:
          repository: cedar-policy/cedar
          ref: main
          path: ./cedar
          ssh-key: ${{ secrets.CEDAR }}
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo fmt
        working-directory: ./tiny-todo
        run: cargo fmt --all --check
      - name: cargo rustc
        working-directory: ./tiny-todo
        run: |
             printf "\npath = \"../cedar/cedar-policy\"" >> Cargo.toml
             RUSTFLAGS="-D warnings -F unsafe-code" cargo build --verbose
      - name: cargo test
        working-directory: ./tiny-todo
        run: cargo test --verbose
