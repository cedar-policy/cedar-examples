name: Build and test Rust example
on:
    workflow_call:
      inputs:
        cedar_policy_ref:
          required: true
          type: string
        cedar_examples_ref:
          required: true
          type: string

jobs:
  build_and_test_rust_hello_world:
    name: Build and test Rust example
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - name: Checkout cedar-examples
        uses: actions/checkout@v4
        with:
          repository: cedar-policy/cedar-examples
          ref: ${{ inputs.cedar_examples_ref }}
      - name: Replace crates.io version with Github version
        run: cd cedar-rust-hello-world && printf "\n[patch.crates-io]\ncedar-policy = { git = 'https://github.com/cedar-policy/cedar.git', rev = '${{ inputs.cedar_policy_ref }}'}" >> Cargo.toml
      - name: rustup
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: cargo fmt
        working-directory: ./cedar-rust-hello-world
        run: cargo fmt --all --check
      - name: cargo rustc
        working-directory: ./cedar-rust-hello-world
        run: RUSTFLAGS="-D warnings -F unsafe-code" cargo build --verbose
      - name: cargo test
        working-directory: ./cedar-rust-hello-world
        run: cargo test --verbose
      - name: cargo run
        working-directory: ./cedar-rust-hello-world
        run: cargo run --verbose
